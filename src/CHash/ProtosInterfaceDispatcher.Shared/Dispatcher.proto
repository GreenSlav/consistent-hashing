syntax = "proto3";

option csharp_namespace = "ProtosInterfaceDispatcher.Protos";

package dispatcher;

service Dispatcher {
  // Создание нового узла в хэш-кольце.
  rpc CreateNode (CreateNodeRequest) returns (CreateNodeResponse);
  // Удаление узла по его уникальному идентификатору.
  rpc DeleteNode (DeleteNodeRequest) returns (DeleteNodeResponse);
  // Получение списка узлов.
  rpc ListNodes (ListNodesRequest) returns (ListNodesResponse);
  // Новый метод для завершения работы диспетчера.
  rpc Shutdown (ShutdownRequest) returns (ShutdownResponse);
}

message CreateNodeRequest {
  int32 preferred_port = 1;        // Порт, на котором должен запускаться узел
  string node_path = 2;            // Путь к исполняемому файлу узла (опционально)
}


message CreateNodeResponse {
  bool success = 1;                // Флаг успеха
  string node_id = 2;              // Уникальный идентификатор созданного узла (например, PID)
  int32 port = 3;                  // Фактически выбранный порт
  string message = 4;              // Дополнительное сообщение
}

message DeleteNodeRequest {
  string node_id = 1;
}

message DeleteNodeResponse {
  bool success = 1;
  string message = 2;
}

message ListNodesRequest {
}

message NodeInfo {
  string node_id = 1;
  int32 port = 2;
}

message ListNodesResponse {
  repeated NodeInfo nodes = 1;
}

// Запрос для завершения работы диспетчера.
// Можно передать идентификатор диспетчера, если нужно различать несколько экземпляров.
message ShutdownRequest {
  string dispatcher_id = 1;
}

message ShutdownResponse {
  bool success = 1;
  string message = 2;
}